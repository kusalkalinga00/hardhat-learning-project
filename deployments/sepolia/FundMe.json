{
  "address": "0xA0bd408c2A47bA7e83FcdBd79684Ba029A9a0e5B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_PriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x57e60df273e11b3c7a3a4990e0efe538b7beb5c1fa229614e65ad5524461c86a",
  "receipt": {
    "to": null,
    "from": "0x5b9141b2258A45B133b61D32112fC9369D95Af24",
    "contractAddress": "0xA0bd408c2A47bA7e83FcdBd79684Ba029A9a0e5B",
    "transactionIndex": 21,
    "gasUsed": "1077692",
    "logsBloom": "0x
    "blockHash": "0x7ceb5afa9e488671b0de8bbed633637de59bb4c72ae07cb95e34172df6b2c9c3",
    "transactionHash": "0x57e60df273e11b3c7a3a4990e0efe538b7beb5c1fa229614e65ad5524461c86a",
    "logs": [],
    "blockNumber": 3197882,
    "cumulativeGasUsed": "3939504",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 3,
  "solcInputHash": "3aca31688ccd08adfe23d7631d9e3853",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_PriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Kusal Kalinga\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Kusal Kalinga\\n * @notice This contract is to demo a simple funding contract\\n */\\n\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public s_PriceFeed;\\n\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_PriceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_PriceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory funders = s_funders;\\n\\n        for(uint256 funderIndex = 0 ; funderIndex < funders.length; funderIndex ++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success , ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address)  {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_PriceFeed;\\n    }\\n\\n    \\n}\\n\",\"keccak256\":\"0x527eaf89ff5eabf581270c5acf1fd7779bd9fe3b1c9928d20812024469d2e618\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        \\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount , AggregatorV3Interface priceFeed )\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x27cbaf3900eb3073cdcf6f22ce98a6c8e41ef37ce26e7282943cbc0bcf007b85\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013a5380380620013a5833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61121f62000186600039600081816103d80152818161064d0152818161069d0152610893015261121f6000f3fe6080604052600436106100955760003560e01c8063893d20e811610059578063893d20e8146101955780639e87a5cd146101c0578063b60d4288146101eb578063be2693f0146101f5578063d7b4750c146101ff576100a4565b80630343fb25146100ae5780631bf6132d146100eb5780633ccfd60b146101285780636677a04b1461013f5780636b69a5921461016a576100a4565b366100a4576100a261023c565b005b6100ac61023c565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190610b57565b610376565b6040516100e29190610b9d565b60405180910390f35b3480156100f757600080fd5b50610112600480360381019061010d9190610b57565b6103be565b60405161011f9190610b9d565b60405180910390f35b34801561013457600080fd5b5061013d6103d6565b005b34801561014b57600080fd5b50610154610616565b6040516101619190610c17565b60405180910390f35b34801561017657600080fd5b5061017f61063c565b60405161018c9190610b9d565b60405180910390f35b3480156101a157600080fd5b506101aa610649565b6040516101b79190610c41565b60405180910390f35b3480156101cc57600080fd5b506101d5610671565b6040516101e29190610c17565b60405180910390f35b6101f361023c565b005b6101fd61069b565b005b34801561020b57600080fd5b5061022660048036038101906102219190610c88565b610929565b6040516102339190610c41565b60405180910390f35b6802b5e3af16b188000061027b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461097190919063ffffffff16565b10156102bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b390610d12565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461030a9190610d61565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045b576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105065760006001828154811061048157610480610db7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104fe90610de6565b91505061045e565b50600067ffffffffffffffff81111561052257610521610e2f565b5b6040519080825280602002602001820160405280156105505781602001602082028036833780820191505090505b5060019080519060200190610566929190610a4d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058d90610e8f565b60006040518083038185875af1925050503d80600081146105ca576040519150601f19603f3d011682016040523d82523d6000602084013e6105cf565b606091505b5050905080610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90610ef0565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610720576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075a575b5050505050905060005b815181101561082e5760008282815181106107cc576107cb610db7565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082690610de6565b9150506107ae565b50600067ffffffffffffffff81111561084a57610849610e2f565b5b6040519080825280602002602001820160405280156108785781602001602082028036833780820191505090505b506001908051906020019061088e929190610a4d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d590610e8f565b60006040518083038185875af1925050503d8060008114610912576040519150601f19603f3d011682016040523d82523d6000602084013e610917565b606091505b505090508061092557600080fd5b5050565b60006001828154811061093f5761093e610db7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061097d836109ad565b90506000670de0b6b3a764000085836109969190610f10565b6109a09190610f99565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f657600080fd5b505afa158015610a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190611057565b5050509150506402540be40081610a4591906110d2565b915050919050565b828054828255906000526020600020908101928215610ac6579160200282015b82811115610ac55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a6d565b5b509050610ad39190610ad7565b5090565b5b80821115610af0576000816000905550600101610ad8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2482610af9565b9050919050565b610b3481610b19565b8114610b3f57600080fd5b50565b600081359050610b5181610b2b565b92915050565b600060208284031215610b6d57610b6c610af4565b5b6000610b7b84828501610b42565b91505092915050565b6000819050919050565b610b9781610b84565b82525050565b6000602082019050610bb26000830184610b8e565b92915050565b6000819050919050565b6000610bdd610bd8610bd384610af9565b610bb8565b610af9565b9050919050565b6000610bef82610bc2565b9050919050565b6000610c0182610be4565b9050919050565b610c1181610bf6565b82525050565b6000602082019050610c2c6000830184610c08565b92915050565b610c3b81610b19565b82525050565b6000602082019050610c566000830184610c32565b92915050565b610c6581610b84565b8114610c7057600080fd5b50565b600081359050610c8281610c5c565b92915050565b600060208284031215610c9e57610c9d610af4565b5b6000610cac84828501610c73565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cfc601b83610cb5565b9150610d0782610cc6565b602082019050919050565b60006020820190508181036000830152610d2b81610cef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6c82610b84565b9150610d7783610b84565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dac57610dab610d32565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610df182610b84565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e2457610e23610d32565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e79600083610e5e565b9150610e8482610e69565b600082019050919050565b6000610e9a82610e6c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610eda600b83610cb5565b9150610ee582610ea4565b602082019050919050565b60006020820190508181036000830152610f0981610ecd565b9050919050565b6000610f1b82610b84565b9150610f2683610b84565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5f57610f5e610d32565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fa482610b84565b9150610faf83610b84565b925082610fbf57610fbe610f6a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fe981610fca565b8114610ff457600080fd5b50565b60008151905061100681610fe0565b92915050565b6000819050919050565b61101f8161100c565b811461102a57600080fd5b50565b60008151905061103c81611016565b92915050565b60008151905061105181610c5c565b92915050565b600080600080600060a0868803121561107357611072610af4565b5b600061108188828901610ff7565b95505060206110928882890161102d565b94505060406110a388828901611042565b93505060606110b488828901611042565b92505060806110c588828901610ff7565b9150509295509295909350565b60006110dd8261100c565b91506110e88361100c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112757611126610d32565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116457611163610d32565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a1576111a0610d32565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111de576111dd610d32565b5b82820290509291505056fea26469706673582212200fa94575e2b52764f217eae6538d79c9be118e6f31109b9877f0fc032754463164736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c8063893d20e811610059578063893d20e8146101955780639e87a5cd146101c0578063b60d4288146101eb578063be2693f0146101f5578063d7b4750c146101ff576100a4565b80630343fb25146100ae5780631bf6132d146100eb5780633ccfd60b146101285780636677a04b1461013f5780636b69a5921461016a576100a4565b366100a4576100a261023c565b005b6100ac61023c565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190610b57565b610376565b6040516100e29190610b9d565b60405180910390f35b3480156100f757600080fd5b50610112600480360381019061010d9190610b57565b6103be565b60405161011f9190610b9d565b60405180910390f35b34801561013457600080fd5b5061013d6103d6565b005b34801561014b57600080fd5b50610154610616565b6040516101619190610c17565b60405180910390f35b34801561017657600080fd5b5061017f61063c565b60405161018c9190610b9d565b60405180910390f35b3480156101a157600080fd5b506101aa610649565b6040516101b79190610c41565b60405180910390f35b3480156101cc57600080fd5b506101d5610671565b6040516101e29190610c17565b60405180910390f35b6101f361023c565b005b6101fd61069b565b005b34801561020b57600080fd5b5061022660048036038101906102219190610c88565b610929565b6040516102339190610c41565b60405180910390f35b6802b5e3af16b188000061027b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461097190919063ffffffff16565b10156102bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b390610d12565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461030a9190610d61565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045b576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105065760006001828154811061048157610480610db7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104fe90610de6565b91505061045e565b50600067ffffffffffffffff81111561052257610521610e2f565b5b6040519080825280602002602001820160405280156105505781602001602082028036833780820191505090505b5060019080519060200190610566929190610a4d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058d90610e8f565b60006040518083038185875af1925050503d80600081146105ca576040519150601f19603f3d011682016040523d82523d6000602084013e6105cf565b606091505b5050905080610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90610ef0565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610720576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075a575b5050505050905060005b815181101561082e5760008282815181106107cc576107cb610db7565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082690610de6565b9150506107ae565b50600067ffffffffffffffff81111561084a57610849610e2f565b5b6040519080825280602002602001820160405280156108785781602001602082028036833780820191505090505b506001908051906020019061088e929190610a4d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d590610e8f565b60006040518083038185875af1925050503d8060008114610912576040519150601f19603f3d011682016040523d82523d6000602084013e610917565b606091505b505090508061092557600080fd5b5050565b60006001828154811061093f5761093e610db7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061097d836109ad565b90506000670de0b6b3a764000085836109969190610f10565b6109a09190610f99565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f657600080fd5b505afa158015610a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190611057565b5050509150506402540be40081610a4591906110d2565b915050919050565b828054828255906000526020600020908101928215610ac6579160200282015b82811115610ac55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a6d565b5b509050610ad39190610ad7565b5090565b5b80821115610af0576000816000905550600101610ad8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2482610af9565b9050919050565b610b3481610b19565b8114610b3f57600080fd5b50565b600081359050610b5181610b2b565b92915050565b600060208284031215610b6d57610b6c610af4565b5b6000610b7b84828501610b42565b91505092915050565b6000819050919050565b610b9781610b84565b82525050565b6000602082019050610bb26000830184610b8e565b92915050565b6000819050919050565b6000610bdd610bd8610bd384610af9565b610bb8565b610af9565b9050919050565b6000610bef82610bc2565b9050919050565b6000610c0182610be4565b9050919050565b610c1181610bf6565b82525050565b6000602082019050610c2c6000830184610c08565b92915050565b610c3b81610b19565b82525050565b6000602082019050610c566000830184610c32565b92915050565b610c6581610b84565b8114610c7057600080fd5b50565b600081359050610c8281610c5c565b92915050565b600060208284031215610c9e57610c9d610af4565b5b6000610cac84828501610c73565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cfc601b83610cb5565b9150610d0782610cc6565b602082019050919050565b60006020820190508181036000830152610d2b81610cef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6c82610b84565b9150610d7783610b84565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dac57610dab610d32565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610df182610b84565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e2457610e23610d32565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e79600083610e5e565b9150610e8482610e69565b600082019050919050565b6000610e9a82610e6c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610eda600b83610cb5565b9150610ee582610ea4565b602082019050919050565b60006020820190508181036000830152610f0981610ecd565b9050919050565b6000610f1b82610b84565b9150610f2683610b84565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5f57610f5e610d32565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fa482610b84565b9150610faf83610b84565b925082610fbf57610fbe610f6a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fe981610fca565b8114610ff457600080fd5b50565b60008151905061100681610fe0565b92915050565b6000819050919050565b61101f8161100c565b811461102a57600080fd5b50565b60008151905061103c81611016565b92915050565b60008151905061105181610c5c565b92915050565b600080600080600060a0868803121561107357611072610af4565b5b600061108188828901610ff7565b95505060206110928882890161102d565b94505060406110a388828901611042565b93505060606110b488828901611042565b92505060806110c588828901610ff7565b9150509295509295909350565b60006110dd8261100c565b91506110e88361100c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112757611126610d32565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116457611163610d32565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a1576111a0610d32565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111de576111dd610d32565b5b82820290509291505056fea26469706673582212200fa94575e2b52764f217eae6538d79c9be118e6f31109b9877f0fc032754463164736f6c63430008080033",
  "devdoc": {
    "author": "Kusal Kalinga",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_PriceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}